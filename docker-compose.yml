version: '3.8'

services:
  # Backend API Service
  ciphemic-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ciphemic-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    networks:
      - ciphemic-network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ciphemic-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ciphemic-tech
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ciphemic-network

  # Redis Cache (Optional)
  redis:
    image: redis:7.2-alpine
    container_name: ciphemic-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - ciphemic-network

  # MongoDB Admin Interface (Optional)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: ciphemic-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - ciphemic-network
    profiles:
      - admin

  # Redis Admin Interface (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ciphemic-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
    depends_on:
      - redis
    networks:
      - ciphemic-network
    profiles:
      - admin

networks:
  ciphemic-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
